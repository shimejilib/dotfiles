
[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets','context_filetype.vim']
on_event='InsertEnter'
on_ft='snippet'
hook_source='''
  imap<silent><C-s> <Plug>(neosnippet_jump_or_expand)
  smap<silent><C-s> <Plug>(neosnippet_jump_or_expand)
  xmap<silent><C-s> <Plug>(neosnippet_expand_target)

  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_complete_done = 1
  let g:neosnippet#expand_word_boundary = 1
  " let g:neosnippet#snippets_directory = '~/.vim/snippets'
  " imap <expr><C-n> neosnippet#expandable_or_jumpable() ?
  " \ " \<Plug>(neosnippet_expand_or_jump)"
  " \: pumvisible() ? "\<C-n>" : "\<TAB>"
  " smap <expr><C-n> neosnippet#expandable_or_jumpable() ?
  " \ " \<Plug>(neosnippet_expand_or_jump)"
  " \: "\<TAB>"

'''

[[plugins]]
repo = 'previm/previm'
on_cmd = 'PrevimOpen'
on_ft = 'markdown'
depends = 'open-browser.vim'
hook_source = '''
let g:previm_show_header = 0
'''

[[plugins]]
repo = 'davidhalter/jedi-vim'
if = "!has('nvim')"
on_ft = 'python'
hook_source = '''
source ~/.vim/rc/plugins/jedi.rc.vim
'''

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_source = '''
set helplang& helplang=ja,en
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp']
hook_source = '''
	let g:deoplete#sources#clang#libclang_path='/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
	let g:deoplete#sources#clang#clang_header='/Library/Developer/CommandLineTools/usr/lib/clang/9.1.0/include/'
	autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
'''
depends = ['deoplete.nvim']

